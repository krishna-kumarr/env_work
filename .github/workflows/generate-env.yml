name: Generate and Use Env File + Update Amplify

on:
  push:
    branches: [main, dev]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run against'
        required: false

jobs:
  generate-env:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    outputs:
      branch: ${{ steps.set-branch.outputs.branch }}

    steps:
      - uses: actions/checkout@v3

      - name: Set BRANCH variable
        id: set-branch
        run: |
          if [ -n "${{ github.event.inputs.branch }}" ]; then
            echo "branch=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
          else
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Create env file
        run: |
          echo '${{ secrets.ALL_ENV_VARS }}' > env.json
          cat env.json | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' > .env.generated

          if [ "${{ steps.set-branch.outputs.branch }}" = "main" ]; then
            mv .env.generated .env.production
            echo "path=.env.production" >> $GITHUB_OUTPUT
          else
            mv .env.generated .env.local
            echo "path=.env.local" >> $GITHUB_OUTPUT
          fi

      - name: Set artifact path
        id: set-path
        run: |
          if [[ "${{ steps.set-branch.outputs.branch }}" = "main" ]]; then
            echo "path=.env.production" >> $GITHUB_OUTPUT
          else
            echo "path=.env.local" >> $GITHUB_OUTPUT
          fi

      - name: Upload env artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: env-file-${{ steps.set-branch.outputs.branch }}
          path: ${{ steps.set-path.outputs.path }}

  update-amplify-env:
    needs: generate-env
    runs-on: ubuntu-latest
    environment: ${{ needs.generate-env.outputs.branch }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download env artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file-${{ needs.generate-env.outputs.branch }}

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/update_aws_amplify_secret
          role-session-name: update_aws_amplify_secret

      - name: Debug Env Vars
        run: |
          echo "NEXT_PUBLIC_API_KEY=${{ secrets.NEXT_PUBLIC_API_KEY }},NEXT_PUBLIC_API_KEY_1=${{ secrets.NEXT_PUBLIC_API_KEY_1 }},NEXT_PUBLIC_API_KEY_2=${{ secrets.NEXT_PUBLIC_API_KEY_2 }}"

      - name: Update Amplify Environment Variables
        run: |
          echo '${{ secrets.ALL_ENV_VARS }}' > env.json
          ENV_VARS=$(jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | join(",")' env.json)

          aws amplify update-app \
          --app-id ${{ secrets.AMPLIFY_APP_ID }} \
          --environment-variables "$ENV_VARS"